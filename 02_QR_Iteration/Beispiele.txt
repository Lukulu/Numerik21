  // n = 4;
  // A = (double*)malloc(sizeof(double) * n * n);
  // // A[0] = 4.;
  // // A[1] =0.;
  // // A[2] = 0.;
  // // A[4] = -2.;
  // // A[5] = 0.;
  // // A[8] = 3.;
	// // A[0] = 4.;
	// // A[1] =1.;
	// // A[2] = -2.;
	// // A[3] = 2.;
	// // A[5] = 2.;
	// // A[6] = 0.;
	// // A[7] = 1.;
	// // A[10] = 3.;
	// // A[11] = -2.;
	// // A[15] = -1.;
	// A[0] = 1.;
	// A[1] =2.;
	// A[2] = -2.;
	// A[3] = 8.;
	// A[5] = 3.;
	// A[6] = 6.;
	// A[7] = 4.;
	// A[10] = 5.;
	// A[11] = 8.;
	// A[15] = 7.;
	// // // A[0] = 1.;
	// // // A[1] =2.;
	// // // A[2] = -2.;
	// // // A[3] = 8.;
	// // // A[4] = 3.;
	// // // A[6] = 6.;
	// // // A[7] = 4.;
	// // // A[8] = 5.;
	// // // A[9] = 8.;
	// // // A[12] = 3.;
	// // // A[13] = -1.;
	// // // A[14] = -4.;
	// // // A[18] = 7.;
	// // // A[19] = 5.;
	// // // A[24] = -3.;
  // for (int j = 0; j < n; j++) {
  //   for (int i = 0; i < n; i++) {
  //     if(i != j) A[i*n+j] = A[j*n+i];
  //   }
  // }